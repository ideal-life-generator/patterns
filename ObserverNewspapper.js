// Generated by CoffeeScript 1.8.0
var Animation, Publisher, Superman, publisherObject;

Publisher = (function() {
  function Publisher() {}

  Publisher.subscribers = [];

  Publisher.prototype.deliver = function(data) {
    this.subscribers.forEach(function(fn) {
      return fn(data);
    });
    return this;
  };

  return Publisher;

})();

Function.prototype.subscribe = function(publisher) {
  var alreadyExists;
  alreadyExists = publisher.subscribers.some((function(_this) {
    return function(el) {
      if (el === _this) {
        return true;
      }
    };
  })(this));
  if (!alreadyExists) {
    publisher.subscribers.push(this);
  }
  return this;
};

Function.prototype.unsubscribe = function(publisher) {
  publisher.subscribers = publisher.subscribers.filter((function(_this) {
    return function(el) {
      if (el !== _this) {
        return el;
      }
    };
  })(this));
  return this;
};

publisherObject = new Publisher;

observerObject.subscribe(publisherObject);

Animation = function(o) {
  this.onStart = new Publisher;
  this.onTween = new Publisher;
  this.onComplate = new Publisher;
  return {
    fly: function() {
      var n, _i;
      this.onStart.deliver();
      for (n = _i = 0; 0 <= framesLength ? _i <= framesLength : _i >= framesLength; n = 0 <= framesLength ? ++_i : --_i) {
        this.onTween.deliver(n);
      }
      return this.onComplate.deliver();
    }
  };
};

Superman = new Animation({});

putOnCare.subscribe(Superman.onStart);

takeOffCafe.subscribe(Superman.onComplate);

Superman.fly();

addEvent(element, "click", function() {
  return Superman.fly();
});
